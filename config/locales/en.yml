en:
  hello: "Hello world"

  helpers:
    select:
      prompt: "Please select"
    submit:
      answer:
        create: "Add"
        update: "Make changes"
      badge:
        create: "Create badge"
        update: "Make changes"
      question:
        create: "Add"
        update: "Make changes"
      test:
        create: "Create a Test"
        update: "Make changes"

  activerecord:
    models:
      answer: "Answer"
      category: "Category"
      question: "Question"
      test: "Test"
      test_passage: "Test passage"
      user: "User"
    attributes:
      answer:
        body: "Text"
        correct: "Correct"
        question: "Question"
        question_id: "Question"
      badge:
        title: "Title"
        picture: "Picture"
        requirement_id: "Requirement"
        test_id: "Test"
        category_id: "Category"
      category:
        title: "Title"
      question:
        body: "Text"
        test: "Test"
        test_id: "Test"
        answer_explanation: "Answer explanation"
      test:
        title: "Title"
        category: "Category"
        category_id: "Category"
        level: "Level"
        user: "User"
        user_id: "User"
      test_passage:
        user: "User"
        user_id: "User"
        test: "Test"
        test_id: "Test"
        current_question: "Current question"
        current_question_id: "Current question"
        correct_questions: "Correct questions"
      user:
        first_name: "First name"
        last_name: "Last name"
        email: "Email"
        password: "Password"
        password_confirmation: "Password confirmation"
        access_level: "Access level"
    errors:
      messages:
        accepted: "must be accepted"
        invalid: "is invalid"
        confirmation: "doesn’t match confirmation"
        exclusion: "is reserved"
        inclusionis: "not included in the list"
        too_short: "is too short minimum is %{count} characters"
        too_long: "is too long maximum is %{count} characters"
        wrong_length: "is the wrong length should be %{count} characters"
        not_a_number: "is not a number"
        odd: "must be odd"
        even: "must be even"
        greater_than: "must be greater than {count}"
        greater_than_or_equal_to: "must be greater than or equal to %{count}"
        equal_to: "must be equal to %{count}"
        less_than: "must be less than %{count}"
        less_than_or_equal_to: "must be less than or equal to %{count}"
        blank: "can’t be blank"
        taken: "has already been taken"

  admin:
    answers:
      form:
        answer_for: "Answer for the Question"
        body: "Question text"
        correct: "Correct Answer"
      new:
        header: "Create"
        back: "Back to Question"
      edit:
        header: "Edit"
        back: "Back to Question"
        watch: "Watch an Answer"
        delete: "Delete"
        delete_confirmation: "Are you sure?"
      show:
        header: "Watch an Answer for Question"
        edit: "Edit an Answer"
        answer: "Answer"
        back: "Back to Question"
        correct_true: "This is the correct Answer"
        correct_false: "This is the wrong Answer"
    badges:
      badge:
        no_test: "The specified Test does not exist"
        no_category: "The specified Category does not exist"
        delete_confirmation: "Are you sure? This action will permanently delete badge!"
      create:
        success: "Badge created successfully!"
      edit:
        header: "Edit badge"
        back: "Back to badges list"
        watch: "Watch badge"
        delete: "Delete badge"
        delete_confirmation: "Are you sure? This action will permanently delete badge!"
      index:
        header: "Edit badge"
        new: "Create a new badge"
        title: "Title"
        picture: "Picture"
      new:
        header: "Create a new badge"
        back: "Back to badges list"
      show:
        title: "Title"
        author: "Author"
        picture: "Picture"
        back: "Back to badges list"
        edit: "Edit badge"
        requirements: "Requirements for obtaining"
        requirements_data: "Requirements data"
    gists:
      index:
        empty: "No records"
    questions:
      new:
        header: "Create new Question for Test"
        back: "Back to Test"
      edit:
        header: "Edit a Question text for Test"
        back: "Back to Test"
        watch: "Watch a Question"
        delete: "Delete"
        delete_confirmation: "Are you sure?"
      form:
        body: "Question text"
      show:
        header: "Question text for the Test \"%{title}\""
        back: "Back to Test"
        edit: "Edit a Question"
        add_answer: "Add an Answer"
        answers: "Answers"
    tests:
      create:
        success: "Test created successfully!"
      edit:
        header: "Edit a Test"
        back: "Back to Tests list"
        watch: "Watch a Test"
        delete: "Delete a Test"
        delete_confirmation: "Are you sure? This action will permanently delete the entire Test!"
      form_inline:
        submit: 'OK'
      frozen: "You must unpublish the Test first before you add or edit questions and answers"
      index:
        header: "List of all tests"
        new_test: "Create a new Test"
        title: "Title"
        questions_count: "Quest."
        test: "Test"
        empty: "No records"
      new:
        header: "Create a new Test"
        back: "Back to Tests list"
      publish:
        requirements: "The Test must meet the minimum requirements for publishing"
        success: "The Test published"
      show:
        category: "Category"
        title: "Title"
        author: "Author"
        question_body: "Question text"
        back: "Back to Tests list"
        edit: "Edit a Test"
        add_question: "Add a Question"
        publishing: "Publishing:"
        publish: "publish"
        unpublish: "unpublish"
        state: "State:"
        published: "published and available for passage"
        unpublished: "unpublished"
      state:
        questions_count: "Minimum questions count in the Test - %{count}"
        test_question_answers_count: "Minimum answers count for question (%{body}) - %{count}"
        test_question_right_answers_count: "Minimum right answers count for question (%{body}) - %{count}"
      test:
        delete_confirmation: "Are you sure? This action will permanently delete the entire Test!"
        start: "Start"
      unpublish:
        success: "The Test unpublished"
    author_actions:
      header: "Author actions"
      watch: "Watch"
      edit: "Edit"
      cancel: "Cancel"
      delete: "Delete"
      delete_confirmation: "Are you sure?"
  badges:
    index:
      header: "All badges"
    show:
      my_badges: "My badges"
      all_badges: "All badges"
  gurus:
    badge_achievements:
      all_achieved_badges: "All received badges:"
  tests:
    index:
      header: "List of all Tests"
      title: "Title"
      questions_count: "Quest."
      test: "Test"
      actions: "Author actions"
      empty: "No records"
    test:
      start: "Start"
    start:
      unavailable_test: "This Test is unavailable"
  test_passages:
    result:
      header: "Test completed"
      back: "Back to Tests list"
      success: "You gave %{complete_percent}% correct answers and successfully completed the Test!"
      failure: "You gave %{complete_percent}% correct answers and haven't passed the Test!"
      awarded_with_badges: "For passing this Test you received the following badges:"
      my_badges: "My badges"
      all_badges: "All badges"
    show:
      create_gist: "Difficulties arose? Create a Gist"
      header: "You passing a Test:"
      question_number: "Question %{current_question_number} from %{questions_count}:"
      next_question: "Next question"
      back: "Back to Tests list"
      back_confirmation: "Interrupt execution of the Test?"

  feedbacks:
    new:
      header: "Write to the developer(%{email}):"
      send: "Send"
      no_mail: "Developers mail is not defined"
    create:
      mail_sended: "Mail was successfully sended!"
      mail_is_not_sended: "An error occurred - mail was not sended"
    state:
      back: "Back to the Main"
  feedbacks_mailer:
    feedback_to_developer:
      subject: "Thre is a new mail from TestGuru (feedback)!"

  gists:
    create:
      success: "The Gist created successfully (<a href=\"%{url}\" target=\"_blank\">link</a> to gist.github)"
      failure: "An error occurred while creating the Gist"

  services:
    gist:
      header: "A question about Test \"%{test_title}\" and his question from TestGuru"

  shared:
    admin_required!: "You do not have sufficient permissions to view this page"
    application:
      feedback: "feedback"
    errors:
      header:
        one: "Detected %{count} error:"
        few: "Detected %{count} errors:"
        many: "Detected %{count} errors:"
        other: "Detected %{count} errors:"
    nav:
      exit: "Exit"
      confirm: "Are you sure?"
      guru: "Guru"
      sign_up: "Sign Up"
      sign_in: "Sign In"
      tests: "Tests"
      badges: "Badges"
      gists: "Gists"
      my_badges: "My badges"

  tests_mailer:
    completed_test:
      subject: "You just completed the TestGuru Test!"
